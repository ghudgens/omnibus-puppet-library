#!/bin/bash
#
# Perform necessary puppet-library setup steps after package is installed.
#

PROGNAME=$(basename $0)
PKGNAME=$(basename)
DEST_DIR="/opt/puppet-library"
CONF_DIR="/etc/puppet-library"
MOD_DIR="/var/lib/modules"
LOG_DIR="/var/log/puppet-library"

function error_exit
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

# Create the "nginx" user if it does not already exist
if ! getent passwd nginx > /dev/null; then
  adduser --quiet --system --group --home $MOD_DIR  \
    --no-create-home                                 \
    --gecos "nginx daemon" \
    nginx
fi

# Move puppet-library configs
if [ ! -d $CONF_DIR ]; then
  echo "Generating puppet-library config"
  mv $DEST_DIR/embedded/etc/puppet-library $CONF_DIR || error_exit "Cannot move $DEST_DIR/embedded/etc/puppet-library to $CONF_DIR"
fi

# Move nginx configs
if [ ! -d /etc/nginx ]; then
  echo "Generating nginx configs"
  mv $DEST_DIR/embedded/etc/nginx /etc/nginx || error_exit "Cannot move $DEST_DIR/embedded/etc/nginx to /etc/nginx"
fi

# Move init script
if [ -e $DEST_DIR/embedded/etc/init.d/nginx ]; then
  echo "Creating /etc/init.d/nginx file"
  rm -f /etc/init.d/puppet-library
  mv $DEST_DIR/embedded/etc/init.d/nginx /etc/init.d/nginx || error_exit "Cannot move $DEST_DIR/embedded/etc/init.d/nginx to /etc/init.d/nginx"
  chmod 755 /etc/init.d/nginx
fi

# Create module directory
echo "Creating var directories"
mkdir -m 755 -p $MOD_DIR || error_exit "Cannot create $MOD_DIR"
# Set correct ownership of puppet directories
chown nginx:nginx $MOD_DIR || error_exit "Cannot change permissions of $MOD_DIR"

# Create log directory
echo "Creating log directories"
mkdir -m 750 -p $LOG_DIR/nginx/ || error_exit "Cannot create $LOG_DIR"
touch $LOG_DIR/nginx/error.log || error_exit "Cannot create $LOG_DIR/nginx/error.log"
touch $LOG_DIR/nginx/access.log || error_exit "Cannot create $LOG_DIR/nginx/access.log"
chown -R nginx:nginx $LOG_DIR || error_exit "Cannot change permissions of $LOG_DIR"

echo "Thank you for installing ${PKGNAME}!"

exit 0
